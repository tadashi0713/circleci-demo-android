version: 2.1

orbs:
  android: circleci/android@2.3.0
  ruby: circleci/ruby@2.1.0

jobs:
  lint:
    executor:
      name: android/android-docker
      resource-class: xlarge
      tag: 2023.05.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - run: ./gradlew lintDebug
      - android/save-gradle-cache

  unit_test:
    executor:
      name: android/android-docker
      resource-class: xlarge
      tag: 2023.05.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - run: ./gradlew testDebugUnitTest
      - android/save-gradle-cache
      - store_test_results:
          path: ./app/build/test-results/testDebugUnitTest

  integration_test:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2023.05.1
    steps:
      - checkout
      - android/start-emulator-and-run-tests
      - store_test_results:
          path: ./app/build/outputs/androidTest-results/connected

  build_for_integration_test:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2023.05.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - run: ./gradlew assembleDebugAndroidTest
      - android/save-gradle-cache
      - persist_to_workspace:
          root: ~/
          paths: .

  integration_test_parallel:
    parallelism: 6
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2023.05.1
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - run:
          name: Split Espresso tests
          command: |
            cd app/src/androidTest/java
            CLASSNAMES=$(circleci tests glob "**/*Test.kt" \
              | sed 's@/@.@g' \
              | sed 's/.kt//' \
              | circleci tests split --split-by=timings --timings-type=classname)
            echo "export GRADLE_ARGS='-Pandroid.testInstrumentationRunnerArguments.class=$(echo $CLASSNAMES | sed -z "s/\n//g; s/ /,/g")'" >> $BASH_ENV
      - android/create-avd:
          avd-name: test
          install: true
          system-image: "system-images;android-29;default;x86"
      - android/start-emulator:
          avd-name: test
          post-emulator-launch-assemble-command: ""
      - run:
          name: Run Espresso tests
          command: ./gradlew connectedDebugAndroidTest $GRADLE_ARGS
      - store_test_results:
          path: ./app/build/outputs/androidTest-results/connected

  beta:
    executor:
      name: android/android-docker
      resource-class: xlarge
      tag: 2023.05.1
    steps:
      - checkout
      - android/restore-gradle-cache
      - ruby/install-deps
      - run: bundle exec fastlane beta
      - android/save-gradle-cache
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
      - run:
          name: Get artifacts
          command: |
            project_slug=$(echo "$CIRCLE_BUILD_URL" | sed -e "s|https://circleci.com/||g" -e "s|/[0-9]*$||g")
            artifacts=$(curl -X GET "https://circleci.com/api/v2/project/$project_slug/$CIRCLE_BUILD_NUM/artifacts" \
            -H "Accept: application/json" \
            -u "$CIRCLE_API_TOKEN:")
            echo "export ARTIFACT_URL=$(echo $artifacts | jq '.items[0].url')" >> $BASH_ENV
      - run: echo $ARTIFACT_URL
      - run: |
          cat << EOT > time.html
          <!DOCTYPE html>
          <HTML lang="ja">
          <meta charset="UTF-8">
          <HEAD>
          <TITLE>日本の現在時刻</TITLE>
          </HEAD>
          <BODY>
          日本の現在時刻は、
          <BR>
          `date`
          <BR>
          です。
          </BODY>
          </HTML>
          EOT
      - store_artifacts:
          path: time.html
workflows:
  main:
    jobs:
      - lint
      - unit_test
      - integration_test
      - build_for_integration_test
      - integration_test_parallel:
          requires:
            - build_for_integration_test
      - beta:
          context:
            - mobile
          filters:
            branches:
              only:
                - master
